{"version":3,"file":"AsyncApi.js","sourceRoot":"","sources":["../../../../src/containers/AsyncApi/AsyncApi.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAK,EAAE,EAAE,SAAS,EAAE,MAAM,OAAO,CAAC;AAGzC,OAAO,kBAAkB,MAAM,cAAc,CAAC;AAE9C,OAAO,EACL,yBAAyB,GAG1B,MAAM,aAAa,CAAC;AAErB,OAAO,EAAE,oBAAoB,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAY7D;IAAgC,qCAAuC;IAMrE,2BAAY,KAAoB;QAAhC,YACE,kBAAM,KAAK,CAAC,SACb;QAPD,WAAK,GAAkB;YACrB,QAAQ,EAAE,SAAS;YACnB,KAAK,EAAE,SAAS;SACjB,CAAC;;IAIF,CAAC;IAEK,6CAAiB,GAAvB;;;;gBACE,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;oBACf,KAAqB,IAAI,CAAC,KAAK,EAA7B,MAAM,YAAA,EAAE,MAAM,YAAA,CAAgB;oBACtC,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,MAAM,IAAI,MAAM,CAAC,aAAa,CAAC,CAAC;iBAC1D;;;;KACF;IAEK,8CAAkB,GAAxB,UAAyB,SAAwB;;;;gBACzC,SAAS,GAAG,SAAS,CAAC,MAAM,CAAC;gBAC7B,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;gBAEpC,IAAI,SAAS,KAAK,SAAS,EAAE;oBACnB,MAAM,GAAK,IAAI,CAAC,KAAK,OAAf,CAAgB;oBAC9B,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,MAAM,IAAI,MAAM,CAAC,aAAa,CAAC,CAAC;iBAC7D;;;;KACF;IAED,kCAAM,GAAN;QACQ,IAAA,KAAqB,IAAI,CAAC,KAAK,EAA7B,MAAM,YAAA,EAAE,MAAM,YAAe,CAAC;QAChC,IAAA,KAAsB,IAAI,CAAC,KAAK,EAA9B,QAAQ,cAAA,EAAE,KAAK,WAAe,CAAC;QAEvC,OAAO,CACL,oBAAC,kBAAkB,IACjB,MAAM,EAAE,QAAQ,IAAI,MAAM,EAC1B,MAAM,EAAE,MAAM,EACd,KAAK,EAAE,KAAK,GACZ,CACH,CAAC;IACJ,CAAC;IAEa,uCAAW,GAAzB,UAA0B,MAAmB,EAAE,aAAmB;;;;;;wBAC1D,UAAU,GAAG,oBAAoB,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;wBACnE,IAAI,UAAU,EAAE;4BACd,IAAI,CAAC,QAAQ,CAAC;gCACZ,QAAQ,EAAE,UAAU;6BACrB,CAAC,CAAC;4BACH,WAAO;yBACR;6BAEG,yBAAyB,CAAC,MAAM,CAAC,EAAjC,cAAiC;wBACb,WAAM,MAAM,CAAC,YAAY,CAAC,MAAM,EAAE,aAAa,CAAC,EAAA;;wBAAhE,aAAa,GAAG,SAAgD;wBACtE,IAAI,CAAC,QAAQ,CAAC;4BACZ,QAAQ,EAAE,aAAa,CAAC,QAAQ;4BAChC,KAAK,EAAE,aAAa,CAAC,KAAK;yBAC3B,CAAC,CAAC;wBACH,WAAO;4BAGM,WAAM,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,aAAa,CAAC,EAAA;;wBAAlD,MAAM,GAAG,SAAyC;wBACxD,IAAI,CAAC,QAAQ,CAAC;4BACZ,QAAQ,EAAE,MAAM,CAAC,QAAQ;4BACzB,KAAK,EAAE,MAAM,CAAC,KAAK;yBACpB,CAAC,CAAC;;;;;KACJ;IACH,wBAAC;AAAD,CAAC,AAhED,CAAgC,SAAS,GAgExC;AAED,eAAe,iBAAiB,CAAC","sourcesContent":["import React, { Component } from 'react';\nimport { AsyncAPIDocument } from '@asyncapi/parser';\n\nimport AsyncApiStandalone from './Standalone';\n\nimport {\n  isFetchingSchemaInterface,\n  ErrorObject,\n  PropsSchema,\n} from '../../types';\nimport { ConfigInterface } from '../../config';\nimport { SpecificationHelpers, Parser } from '../../helpers';\n\nexport interface AsyncApiProps {\n  schema: PropsSchema;\n  config?: Partial<ConfigInterface>;\n}\n\ninterface AsyncAPIState {\n  asyncapi?: AsyncAPIDocument;\n  error?: ErrorObject;\n}\n\nclass AsyncApiComponent extends Component<AsyncApiProps, AsyncAPIState> {\n  state: AsyncAPIState = {\n    asyncapi: undefined,\n    error: undefined,\n  };\n\n  constructor(props: AsyncApiProps) {\n    super(props);\n  }\n\n  async componentDidMount() {\n    if (this.props.schema) {\n      const { schema, config } = this.props;\n      this.parseSchema(schema, config && config.parserOptions);\n    }\n  }\n\n  async componentDidUpdate(prevProps: AsyncApiProps) {\n    const oldSchema = prevProps.schema;\n    const newSchema = this.props.schema;\n\n    if (oldSchema !== newSchema) {\n      const { config } = this.props;\n      this.parseSchema(newSchema, config && config.parserOptions);\n    }\n  }\n\n  render() {\n    const { schema, config } = this.props;\n    const { asyncapi, error } = this.state;\n\n    return (\n      <AsyncApiStandalone\n        schema={asyncapi || schema}\n        config={config}\n        error={error}\n      />\n    );\n  }\n\n  private async parseSchema(schema: PropsSchema, parserOptions?: any) {\n    const parsedSpec = SpecificationHelpers.retrieveParsedSpec(schema);\n    if (parsedSpec) {\n      this.setState({\n        asyncapi: parsedSpec,\n      });\n      return;\n    }\n\n    if (isFetchingSchemaInterface(schema)) {\n      const parsedFromUrl = await Parser.parseFromUrl(schema, parserOptions);\n      this.setState({\n        asyncapi: parsedFromUrl.asyncapi,\n        error: parsedFromUrl.error,\n      });\n      return;\n    }\n\n    const parsed = await Parser.parse(schema, parserOptions);\n    this.setState({\n      asyncapi: parsed.asyncapi,\n      error: parsed.error,\n    });\n  }\n}\n\nexport default AsyncApiComponent;\n"]}