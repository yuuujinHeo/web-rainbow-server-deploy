{"version":3,"file":"types.js","sourceRoot":"","sources":["../../src/types.ts"],"names":[],"mappings":";;;AAeA,SAAgB,yBAAyB,CACvC,MAAmB;IAEnB,OAAQ,MAAkC,CAAC,GAAG,KAAK,SAAS,CAAC;AAC/D,CAAC;AAJD,8DAIC;AAYD,IAAY,WAGX;AAHD,WAAY,WAAW;IACrB,kCAAmB,CAAA;IACnB,sCAAuB,CAAA;AACzB,CAAC,EAHW,WAAW,GAAX,mBAAW,KAAX,mBAAW,QAGtB","sourcesContent":["import { AsyncAPIDocument } from '@asyncapi/parser';\n\nexport type PropsSchema =\n  | string\n  | FetchingSchemaInterface\n  | AsyncAPIDocument\n  | object;\n\nexport type NullableAsyncApi = AsyncAPIDocument | null;\n\nexport interface AsyncApiState {\n  validatedSchema: NullableAsyncApi;\n  error?: ErrorObject;\n}\n\nexport function isFetchingSchemaInterface(\n  schema: PropsSchema,\n): schema is FetchingSchemaInterface {\n  return (schema as FetchingSchemaInterface).url !== undefined;\n}\n\nexport interface FetchingSchemaInterface {\n  url: string;\n  requestOptions?: RequestInit;\n}\n\nexport interface ParserReturn {\n  asyncapi?: AsyncAPIDocument;\n  error?: ErrorObject;\n}\n\nexport enum PayloadType {\n  PUBLISH = 'publish',\n  SUBSCRIBE = 'subscribe',\n}\n\nexport interface MessageExample {\n  name?: string;\n  summary?: string;\n  example: any;\n}\n\nexport interface ValidationError {\n  title: string;\n  location: {\n    jsonPointer: string;\n    startLine: number;\n    startColumn: number;\n    startOffset: number;\n    endLine: number;\n    endColumn: number;\n    endOffset: number;\n  };\n}\n\nexport interface ErrorObject {\n  type: string;\n  title: string;\n  detail?: string;\n  parsedJSON?: any;\n  validationErrors?: ValidationError[];\n  location?: {\n    startLine: number;\n    startColumn: number;\n    startOffset: number;\n  };\n  refs?: Array<{\n    title: string;\n    jsonPointer: string;\n    startLine: number;\n    startColumn: number;\n    startOffset: number;\n    endLine: number;\n    endColumn: number;\n    endOffset: number;\n  }>;\n}\n"]}