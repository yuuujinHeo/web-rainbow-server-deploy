{"version":3,"file":"specification.js","sourceRoot":"","sources":["../../../src/helpers/specification.ts"],"names":[],"mappings":"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","sourcesContent":["import { AsyncAPIDocument, Tag } from '@asyncapi/parser';\n// @ts-ignore\nimport AsyncAPIDocumentModel from '@asyncapi/parser/lib/models/asyncapi';\n\nexport class SpecificationHelpers {\n  /**\n   * Returns parsed AsyncAPI specification.\n   */\n  static retrieveParsedSpec(schema: any): AsyncAPIDocument | undefined {\n    if (!schema) {\n      return undefined;\n    }\n\n    // check if schema is an instance of AsyncAPIDocument (model from AsyncAPI Parser)\n    if (schema.constructor && schema.constructor.name === 'AsyncAPIDocument') {\n      return schema as AsyncAPIDocument;\n    }\n\n    // then check if schema is an instance of AsyncAPIDocument (model from AsyncAPI Parser)\n    // this check is used for security in case of code mangling (unification)\n    if (\n      typeof schema.version === 'function' &&\n      schema._json &&\n      schema._json.asyncapi\n    ) {\n      return schema as AsyncAPIDocument;\n    }\n\n    // check if input is a string and try parse it\n    if (typeof schema === 'string') {\n      try {\n        schema = JSON.parse(schema);\n      } catch (e) {\n        return undefined;\n      }\n    }\n\n    // at the end check if schema is a parsed JS object (as output from AsyncAPI Parser)\n    if (typeof schema === 'object' && schema['x-parser-spec-parsed'] === true) {\n      // if schema is stringified by `AsyncAPIDocument.stringify` function\n      if (schema['x-parser-spec-stringified'] === true) {\n        return AsyncAPIDocumentModel.parse(schema);\n      }\n      return new AsyncAPIDocumentModel(schema);\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Check if given schema have one of the specified tags.\n   */\n  static containTags(schema: any, tags: Tag | Tag[]): boolean {\n    const tagsToCheck =\n      typeof schema.tags === 'function' ? schema.tags() : undefined;\n    if (tagsToCheck === undefined || !Array.isArray(tagsToCheck)) {\n      return false;\n    }\n    tags = Array.isArray(tags) ? tags : [tags];\n    return tagsToCheck.some((tag: Tag) =>\n      (tags as Tag[]).some(t => t.name() === tag.name()),\n    );\n  }\n\n  /**\n   * Return all tags from operations\n   */\n  static operationsTags(spec: AsyncAPIDocument) {\n    const tags = new Map<string, Tag>();\n    Object.entries(spec.channels()).forEach(([_, channel]) => {\n      const publish = channel.publish();\n      if (publish && publish.hasTags()) {\n        publish.tags().forEach(tag => tags.set(tag.name(), tag));\n      }\n      const subscribe = channel.subscribe();\n      if (subscribe && subscribe.hasTags()) {\n        subscribe.tags().forEach(tag => tags.set(tag.name(), tag));\n      }\n    });\n    return Array.from(tags.values());\n  }\n\n  /**\n   * Return all tags from servers\n   */\n  static serversTags(spec: AsyncAPIDocument) {\n    const tags = {} as { string: string[] };\n    Object.entries(spec.servers()).forEach(([_, server]) => {\n      if (server.hasTags()) {\n        server.tags().forEach(tag => {\n          if (tags[tag.name()]) {\n            tags[tag.name()] = [tags[tag.name()], _];\n          } else {\n            tags[tag.name()] = _;\n          }\n        });\n      }\n    });\n    return tags;\n  }\n}\n"]}