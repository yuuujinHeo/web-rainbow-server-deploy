{"version":3,"file":"Operations.js","sourceRoot":"","sources":["../../../../src/containers/Operations/Operations.tsx"],"names":[],"mappings":";;;;;;AAAA,gDAA0B;AAE1B,yCAAwC;AAExC,2CAAoD;AACpD,yCAA8C;AAC9C,6CAAkD;AAClD,qCAA0C;AAEnC,IAAM,UAAU,GAA4B;IACjD,IAAM,QAAQ,GAAG,IAAA,kBAAO,GAAE,CAAC,QAAQ,EAAE,CAAC;IACtC,IAAM,MAAM,GAAG,IAAA,oBAAS,GAAE,CAAC;IAE3B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,EAAE;QACjC,OAAO,IAAI,CAAC;KACb;IAED,IAAM,cAAc,GAAyB,EAAE,CAAC;IAChD,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,UAAC,EAAsB;YAArB,WAAW,QAAA,EAAE,OAAO,QAAA;QACrD,IAAI,OAAO,CAAC,UAAU,EAAE,EAAE;YACxB,cAAc,CAAC,IAAI,CACjB,sCACE,SAAS,EAAC,OAAO,EACjB,GAAG,EAAE,cAAO,WAAW,CAAE,EACzB,EAAE,EAAE,uBAAa,CAAC,aAAa,CAC7B,oBAAa,mBAAW,CAAC,OAAO,cAAI,WAAW,CAAE,EACjD,MAAM,CACP;gBAED,8BAAC,qBAAS,IACR,IAAI,EAAE,mBAAW,CAAC,OAAO,EACzB,SAAS,EAAE,OAAO,CAAC,OAAO,EAAE,EAC5B,WAAW,EAAE,WAAW,EACxB,OAAO,EAAE,OAAO,GAChB,CACC,CACN,CAAC;SACH;QACD,IAAI,OAAO,CAAC,YAAY,EAAE,EAAE;YAC1B,cAAc,CAAC,IAAI,CACjB,sCACE,SAAS,EAAC,OAAO,EACjB,GAAG,EAAE,cAAO,WAAW,CAAE,EACzB,EAAE,EAAE,uBAAa,CAAC,aAAa,CAC7B,oBAAa,mBAAW,CAAC,SAAS,cAAI,WAAW,CAAE,EACnD,MAAM,CACP;gBAED,8BAAC,qBAAS,IACR,IAAI,EAAE,mBAAW,CAAC,SAAS,EAC3B,SAAS,EAAE,OAAO,CAAC,SAAS,EAAE,EAC9B,WAAW,EAAE,WAAW,EACxB,OAAO,EAAE,OAAO,GAChB,CACC,CACN,CAAC;SACH;IACH,CAAC,CAAC,CAAC;IAEH,OAAO,CACL,2CACE,EAAE,EAAE,UAAG,uBAAa,CAAC,aAAa,CAAC,YAAY,EAAE,MAAM,CAAC,CAAE,EAC1D,SAAS,EAAC,OAAO;QAEjB,sCAAI,SAAS,EAAC,0CAA0C,IACrD,2BAAe,CACb;QACL,0CAAK,cAAc,CAAM,CACjB,CACX,CAAC;AACJ,CAAC,CAAC;AA7DW,QAAA,UAAU,cA6DrB","sourcesContent":["import React from 'react';\n\nimport { Operation } from './Operation';\n\nimport { useConfig, useSpec } from '../../contexts';\nimport { CommonHelpers } from '../../helpers';\nimport { OPERATIONS_TEXT } from '../../constants';\nimport { PayloadType } from '../../types';\n\nexport const Operations: React.FunctionComponent = () => {\n  const channels = useSpec().channels();\n  const config = useConfig();\n\n  if (!Object.keys(channels).length) {\n    return null;\n  }\n\n  const operationsList: React.ReactNodeArray = [];\n  Object.entries(channels).forEach(([channelName, channel]) => {\n    if (channel.hasPublish()) {\n      operationsList.push(\n        <li\n          className=\"mb-12\"\n          key={`pub-${channelName}`}\n          id={CommonHelpers.getIdentifier(\n            `operation-${PayloadType.PUBLISH}-${channelName}`,\n            config,\n          )}\n        >\n          <Operation\n            type={PayloadType.PUBLISH}\n            operation={channel.publish()}\n            channelName={channelName}\n            channel={channel}\n          />\n        </li>,\n      );\n    }\n    if (channel.hasSubscribe()) {\n      operationsList.push(\n        <li\n          className=\"mb-12\"\n          key={`sub-${channelName}`}\n          id={CommonHelpers.getIdentifier(\n            `operation-${PayloadType.SUBSCRIBE}-${channelName}`,\n            config,\n          )}\n        >\n          <Operation\n            type={PayloadType.SUBSCRIBE}\n            operation={channel.subscribe()}\n            channelName={channelName}\n            channel={channel}\n          />\n        </li>,\n      );\n    }\n  });\n\n  return (\n    <section\n      id={`${CommonHelpers.getIdentifier('operations', config)}`}\n      className=\"mt-16\"\n    >\n      <h2 className=\"2xl:w-7/12 text-3xl font-light mb-4 px-8\">\n        {OPERATIONS_TEXT}\n      </h2>\n      <ul>{operationsList}</ul>\n    </section>\n  );\n};\n"]}