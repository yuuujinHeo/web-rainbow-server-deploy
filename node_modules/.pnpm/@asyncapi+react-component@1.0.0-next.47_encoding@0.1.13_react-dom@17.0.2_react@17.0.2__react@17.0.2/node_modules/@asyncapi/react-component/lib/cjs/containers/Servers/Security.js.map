{"version":3,"file":"Security.js","sourceRoot":"","sources":["../../../../src/containers/Servers/Security.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport { ServerSecurityRequirement, SecurityScheme } from '@asyncapi/parser';\n\nimport { Href, Markdown } from '../../components';\n\nimport { useSpec } from '../../contexts';\nimport { ServerHelpers } from '../../helpers';\n\ninterface Props {\n  security: ServerSecurityRequirement[];\n  protocol?: string;\n  header?: string;\n}\n\nexport const Security: React.FunctionComponent<Props> = ({\n  security = [],\n  protocol = '',\n  header = 'Security',\n}) => {\n  const asyncapi = useSpec();\n  const securitySchemes =\n    asyncapi.hasComponents() && asyncapi.components().securitySchemes();\n\n  let renderedSecurities;\n  if (\n    !security ||\n    !security.length ||\n    !securitySchemes ||\n    !Object.keys(securitySchemes).length\n  ) {\n    if (protocol === 'kafka' || protocol === 'kafka-secure') {\n      renderedSecurities = (\n        <SecurityItem protocol={protocol} securitySchema={null} />\n      );\n    }\n  } else {\n    const securities: React.ReactNodeArray = security\n      .map(requirement => {\n        const requirements = requirement.json();\n        const key = Object.keys(requirements)[0];\n        const def = securitySchemes[String(key)];\n        const requiredScopes: string[] = requirements[String(key)];\n\n        if (!def) {\n          return null;\n        }\n        return (\n          <SecurityItem\n            protocol={protocol}\n            securitySchema={def}\n            requiredScopes={requiredScopes}\n            key={def.type()}\n          />\n        );\n      })\n      .filter(Boolean);\n\n    renderedSecurities = (\n      <ul>\n        {securities.map((s, idx) => (\n          <li className=\"mt-2\" key={idx}>\n            {s}\n          </li>\n        ))}\n      </ul>\n    );\n  }\n\n  if (!renderedSecurities) {\n    return null;\n  }\n\n  return (\n    <div className=\"text-sm mt-4\">\n      <h5 className=\"text-gray-800\">{header}:</h5>\n      {renderedSecurities}\n    </div>\n  );\n};\n\nfunction collectSecuritySchemas(\n  securitySchema: SecurityScheme | null,\n  requiredScopes: string[] = [],\n): React.ReactNodeArray {\n  const schemas: React.ReactNodeArray = [];\n  if (securitySchema) {\n    if (securitySchema.name()) {\n      schemas.push(<span>Name: {securitySchema.name()}</span>);\n    }\n    if (securitySchema.in()) {\n      schemas.push(<span>In: {securitySchema.in()}</span>);\n    }\n    if (securitySchema.scheme()) {\n      schemas.push(<span>Scheme: {securitySchema.scheme()}</span>);\n    }\n    if (securitySchema.bearerFormat()) {\n      schemas.push(<span>Bearer format: {securitySchema.bearerFormat()}</span>);\n    }\n    if (securitySchema.openIdConnectUrl()) {\n      schemas.push(\n        <Href href={securitySchema.openIdConnectUrl()} className=\"underline\">\n          Connect URL\n        </Href>,\n      );\n    }\n    if (requiredScopes.length) {\n      schemas.push(<span>Required scopes: {requiredScopes.join(', ')}</span>);\n    }\n  }\n  return schemas;\n}\n\ninterface SecurityItemProps {\n  securitySchema: SecurityScheme | null;\n  protocol: string;\n  requiredScopes?: string[];\n}\n\nconst SecurityItem: React.FunctionComponent<SecurityItemProps> = ({\n  securitySchema,\n  protocol,\n  requiredScopes,\n}) => {\n  const schemas: React.ReactNodeArray = collectSecuritySchemas(\n    securitySchema,\n    requiredScopes,\n  );\n\n  let renderedKafkaSecurity;\n  if (['kafka', 'kafka-secure'].includes(protocol)) {\n    const { securityProtocol, saslMechanism } = ServerHelpers.getKafkaSecurity(\n      protocol,\n      securitySchema,\n    );\n\n    renderedKafkaSecurity = (\n      <div className=\"px-4 py-2 ml-2 mb-2 border border-gray-400 bg-gray-100 rounded\">\n        {securityProtocol && (\n          <div className=\"mt-1\">\n            <span className=\"text-xs font-bold text-gray-600 mt-1 mr-1 uppercase\">\n              security.protocol:\n            </span>\n            <span className=\"inline-block font-bold no-underline bg-indigo-400 text-white text-xs rounded py-0 px-1 ml-1\">\n              {securityProtocol}\n            </span>\n          </div>\n        )}\n        {saslMechanism && (\n          <div className=\"mt-1\">\n            <span className=\"text-xs font-bold text-gray-600 mt-1 mr-1 uppercase\">\n              sasl.mechanism:\n            </span>\n            <span className=\"inline-block font-bold no-underline bg-indigo-400 text-white text-xs rounded py-0 px-1 ml-1\">\n              {saslMechanism}\n            </span>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  const flows = securitySchema && securitySchema.flows();\n  const renderedFlows =\n    flows &&\n    Object.entries(flows).map(([flowName, flow]) => {\n      const authorizationUrl = flow.authorizationUrl();\n      const tokenUrl = flow.tokenUrl();\n      const refreshUrl = flow.refreshUrl();\n      const scopes = flow.scopes();\n\n      return (\n        <div\n          className=\"px-4 py-2 ml-2 mb-2 border border-gray-400 bg-gray-100 rounded\"\n          key={flowName}\n        >\n          <div>\n            <span className=\"text-xs font-bold text-gray-600 mt-1 mr-1 uppercase\">\n              Flow:\n            </span>\n            <span className=\"text-xs font-bold text-gray-600 mt-1 mr-1 uppercase\">\n              {ServerHelpers.flowName(flowName)}\n            </span>\n          </div>\n\n          {authorizationUrl && (\n            <div className=\"mt-1\">\n              <span className=\"text-xs font-bold text-gray-600 mt-1 mr-1 uppercase\">\n                Auth URL:\n              </span>\n              <Href href={authorizationUrl} className=\"underline\">\n                {authorizationUrl}\n              </Href>\n            </div>\n          )}\n          {tokenUrl && (\n            <div className=\"mt-1\">\n              <span className=\"text-xs font-bold text-gray-600 mt-1 mr-1 uppercase\">\n                Token URL:\n              </span>\n              <Href href={tokenUrl} className=\"underline\">\n                {tokenUrl}\n              </Href>\n            </div>\n          )}\n          {refreshUrl && (\n            <div className=\"mt-1\">\n              <span className=\"text-xs font-bold text-gray-600 mt-1 mr-1 uppercase\">\n                Refresh URL:\n              </span>\n              <Href href={refreshUrl} className=\"underline\">\n                {refreshUrl}\n              </Href>\n            </div>\n          )}\n          {scopes && (\n            <div className=\"mt-1\">\n              <span className=\"text-xs font-bold text-gray-600 mt-1 mr-1 uppercase\">\n                Scopes:\n              </span>\n              <ul className=\"inline-block\">\n                {scopes &&\n                  Object.entries(scopes).map(([scopeName, scopeDesc]) => (\n                    <li\n                      className=\"inline-block font-bold no-underline bg-indigo-400 text-white text-xs rounded py-0 px-1 ml-1\"\n                      title={scopeDesc}\n                      key={scopeName}\n                    >\n                      {scopeName}\n                    </li>\n                  ))}\n              </ul>\n            </div>\n          )}\n        </div>\n      );\n    });\n\n  return (\n    <div>\n      {securitySchema && schemas && (\n        <div>\n          <span>\n            {ServerHelpers.securityType(securitySchema.type())}\n            {schemas.length > 0 && (\n              <ul className=\"inline-block ml-2\">\n                {schemas.map((schema, idx) => (\n                  <li\n                    className=\"inline-block font-bold no-underline bg-blue-400 text-white text-xs uppercase rounded px-2 py-0 ml-1\"\n                    key={idx}\n                  >\n                    {schema}\n                  </li>\n                ))}\n              </ul>\n            )}\n          </span>\n        </div>\n      )}\n\n      {securitySchema && securitySchema.hasDescription() && (\n        <div>\n          <Markdown>{securitySchema.description()}</Markdown>\n        </div>\n      )}\n\n      {renderedFlows && renderedFlows.length > 0 && (\n        <ul className=\"my-2\">\n          <li>{renderedFlows}</li>\n        </ul>\n      )}\n\n      {renderedKafkaSecurity && <div>{renderedKafkaSecurity}</div>}\n    </div>\n  );\n};\n"]}