syntax = "proto3";

package redis;

service RedisSocketCacheGrpcService {
  rpc ReadSocketCache(ReadSocketCacheRequest) returns (ReadSocketCacheResponse);
  rpc ReadSocketCacheList(ReadSocketCacheListRequest) returns (ReadSocketCacheListResponse);
  rpc CreateSocketCache(CreateSocketCacheRequest) returns (CreateSocketCacheResponse);
  rpc UpdateSocketCache(UpdateSocketCacheRequest) returns (UpdateSocketCacheResponse);
  rpc DeleteSocketCache(DeleteSocketCacheRequest) returns (DeleteSocketCacheResponse);
}

service RedisRobotCacheGrpcService {
  rpc ReadRobotCache(ReadRobotCacheRequest) returns (ReadRobotCacheResponse);
  rpc ExistsRobotCache(ExistsRobotCacheRequest) returns (ExistsRobotCacheResponse);
  rpc ReadRobotCacheList(ReadRobotCacheListRequest) returns (ReadRobotCacheListResponse);
  rpc CreateRobotCache(CreateRobotCacheRequest) returns (CreateRobotCacheResponse);
  rpc UpdateRobotCache(UpdateRobotCacheRequest) returns (UpdateRobotCacheResponse);
  rpc DeleteRobotCache(DeleteRobotCacheRequest) returns (DeleteRobotCacheResponse);
}

enum RobotType {
  UNKNOWN = 0;
  MOBILE = 1;
  MANIPULATOR = 2;
  SENSOR = 3;
}

enum SocketType {
  CLIENT = 0;
  AMR = 1;
}

message ExistsRobotCacheRequest {
  string robotSerial = 1;
  RobotType robotType = 2;
}

message ExistsRobotCacheResponse {
  bool exists = 1;
}

message CreateRobotCacheRequest {
  string robotSerial = 1;
  RobotType robotType = 2;
  optional string robotName = 3;
  optional string robotIpAddress = 4;
  optional string robotUri = 5;
  string robotApproveYn = 6;
}

message CreateRobotCacheResponse {
  string robotSerial = 1;
  RobotType robotType = 2;
  string robotName = 3;
  string robotIpAddress = 4;
  string robotUri = 5;
  string robotApproveYn = 6;
}

message UpdateRobotCacheRequest {
  string robotSerial = 1;
  RobotType robotType = 2;
  optional Robot data = 3;

  message Robot {
    optional string robotSerial = 1;
    optional RobotType robotType = 2;
    optional string robotName = 3;
    optional string robotIpAddress = 4;
    optional string robotUri = 5;
    optional string robotApproveYn = 6;
  }
}

message UpdateRobotCacheResponse {
  string robotSerial = 1;
  RobotType robotType = 2;
  string robotName = 3;
  string robotIpAddress = 4;
  string robotUri = 5;
  string robotApproveYn = 6;
}

message ReadRobotCacheRequest {
  string robotSerial = 1;
  optional RobotType robotType = 2;
}

message ReadRobotCacheResponse {
  string robotSerial = 1;
  RobotType robotType = 2;
  string robotName = 3;
  string robotIpAddress = 4;
  string robotUri = 5;
  string robotApproveYn = 6;
}

message ReadRobotCacheListRequest {
  optional int32 pageNo = 1;
  optional int32 pageSize = 2;
  optional string searchType = 3;
  optional string searchText = 4;
  optional string robotSerial = 5;
  optional RobotType robotType = 6;
  optional string robotName = 7;
  optional string robotIpAddress = 8;
  optional string robotUri = 9;
  optional string robotApproveYn = 10;
}

message ReadRobotCacheListResponse {
  int32 pageNo = 1;
  int32 pageSize = 2;
  int32 totalCount = 3;
  int32 totalPage = 4;

  repeated Robot data = 5;

  message Robot {
    string robotSerial = 1;
    RobotType robotType = 2;
    string robotName = 3;
    string robotIpAddress = 4;
    string robotUri = 5;
    string robotApproveYn = 6;
  }
}

message DeleteRobotCacheRequest {
  string robotSerial = 1;
  RobotType robotType = 2;
}

message DeleteRobotCacheResponse {
  string robotSerial = 1;
  RobotType robotType = 2;
  string robotName = 3;
  string robotIpAddress = 4;
  string robotUri = 5;
  string robotApproveYn = 6;
}

message CreateSocketCacheRequest {
  string socketKey = 1;
  SocketType socketType = 2;
  optional string socketValue = 3;
}

message CreateSocketCacheResponse {
  string socketKey = 1;
  SocketType socketType = 2;
  string socketValue = 3;
}

message UpdateSocketCacheRequest {
  string socketKey = 1;
  SocketType socketType = 2;
  optional Socket data = 3;

  message Socket {
    optional string socketValue = 1;
  }
}

message UpdateSocketCacheResponse {
  string socketKey = 1;
  SocketType socketType = 2;
  string socketValue = 3;
}

message ReadSocketCacheRequest {
  string socketKey = 1;
  SocketType socketType = 2;
}

message ReadSocketCacheResponse {
  string socketKey = 1;
  SocketType socketType = 2;
  string socketValue = 3;
}

message ReadSocketCacheListRequest {
  optional int32 pageNo = 1;
  optional int32 pageSize = 2;
  optional string searchType = 3;
  optional string searchText = 4;
  optional string socketKey = 5;
  optional SocketType socketType = 6;
}

message ReadSocketCacheListResponse {
  int32 pageNo = 1;
  int32 pageSize = 2;
  int32 totalCount = 3;
  int32 totalPage = 4;

  repeated Socket data = 5;

  message Socket {
    optional string socketKey = 1;
    optional SocketType socketType = 2;
    optional string socketValue = 3;
  }
}

message DeleteSocketCacheRequest {
  string socketKey = 1;
  SocketType socketType = 2;
}

message DeleteSocketCacheResponse {
  string socketKey = 1;
  SocketType socketType = 2;
  string socketValue = 3;
}