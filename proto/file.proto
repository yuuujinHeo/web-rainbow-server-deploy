syntax = "proto3";

package file;

service FileGrpcService {
  rpc ReadFileList(ReadFileListRequest) returns (ReadFileListResponse);
  rpc ReadFile(ReadFileRequest) returns (ReadFileResponse);
  rpc CreateFile(CreateFileRequest) returns (CreateFileResponse);
  rpc UpdateFile(UpdateFileRequest) returns (UpdateFileResponse);
  rpc DeleteFile(DeleteFileRequest) returns (DeleteFileResponse);
  rpc UploadFile(UploadFileRequest) returns (UploadFileResponse);
  rpc DownloadFile(DownloadFileRequest) returns (DownloadFileResponse);
}

message ReadFileListRequest {
  int32 pageNo = 1;
  int32 pageSize = 2;
  optional string searchType = 3;
  optional string searchText = 4;
  optional string parentFolderId = 5;
  optional string fileType = 6;
  optional string status = 7;
  optional string createdAtStart = 8;
  optional string createdAtEnd = 9;
  optional string updatedAtStart = 10;
  optional string updatedAtEnd = 11;
  optional string createdBy = 12;
  optional string updatedBy = 13;
  repeated string tags = 14;
}

message ReadFileRequest {
  string fileId = 1;
}

message CreateFileRequest {
  string fileName = 1;
  string originalName = 2;
  string filePath = 3;
  int64 fileSize = 4;
  optional string fileType = 5;
  optional string mimeType = 6;
  optional string fileExtension = 7;
  optional string checksum = 8;
  optional string storageType = 9;
  optional string storageLocation = 10;
  optional string parentFolderId = 11;
  optional bool isDirectory = 12;
  string createdBy = 13;
  repeated FileMetadata metadata = 14;
  repeated string tags = 15;
}

message UpdateFileRequest {
  string fileId = 1;
  optional FileUpdateData data = 2;

  message FileUpdateData {
    optional string fileName = 1;
    optional string parentFolderId = 2;
    optional string status = 3;
    optional string updatedBy = 4;
    repeated FileMetadata metadata = 5;
    repeated string tags = 6;
  }
}

message DeleteFileRequest {
  string fileId = 1;
  optional bool permanentDelete = 2;
}

message UploadFileRequest {
  string fileName = 1;
  string originalName = 2;
  bytes fileContent = 3;
  optional string parentFolderId = 4;
  string uploadedBy = 5;
  repeated FileMetadata metadata = 6;
  repeated string tags = 7;
}

message DownloadFileRequest {
  string fileId = 1;
  optional int32 versionNumber = 2;
}

message GetFileVersionsRequest {
  string fileId = 1;
  optional int32 pageNo = 2;
  optional int32 pageSize = 3;
}

message FileMetadata {
  string key = 1;
  string value = 2;
  optional string dataType = 3;
}

message FileInfo {
  string fileId = 1;
  string fileName = 2;
  string originalName = 3;
  string filePath = 4;
  int64 fileSize = 5;
  string fileType = 6;
  string mimeType = 7;
  string fileExtension = 8;
  string checksum = 9;
  string storageType = 10;
  string storageLocation = 11;
  string parentFolderId = 12;
  bool isDirectory = 13;
  string status = 14;
  string createdAt = 15;
  string updatedAt = 16;
  string createdBy = 17;
  string updatedBy = 18;
  repeated FileMetadata metadata = 19;
  repeated string tags = 20;
}

message ReadFileListResponse {
  int32 pageNo = 1;
  int32 pageSize = 2;
  int32 totalCount = 3;
  int32 totalPage = 4;
  optional string searchType = 5;
  optional string searchText = 6;
  repeated FileInfo data = 7;
}

message ReadFileResponse {
  FileInfo fileInfo = 1;
}

message CreateFileResponse {
  string fileId = 1;
  string message = 2;
}

message UpdateFileResponse {
  string fileId = 1;
  string message = 2;
}

message DeleteFileResponse {
  string fileId = 1;
  string message = 2;
}

message UploadFileResponse {
  string fileId = 1;
  string fileName = 2;
  int64 fileSize = 3;
  string message = 4;
}

message DownloadFileResponse {
  string fileId = 1;
  string fileName = 2;
  string mimeType = 3;
  bytes fileContent = 4;
}
