syntax = "proto3";

package network;
service NetworkGrpcService {
    rpc GetNetwork(Empty) returns (GetNetworkResponse);
    rpc GetDevice(GetDeviceRequest) returns (Network);
    rpc GetEthernet(Empty) returns (GetEthernetResponse);
    rpc GetWifi(Empty) returns (Network);
    rpc GetBluetooth(Empty) returns (Network);
    rpc SetNetwork(SetNetworkRequest) returns (SetNetworkResponse);
    rpc ConnectWifi(ConnectWifiRequest) returns (ConnectWifiResponse);
    rpc GetWifiList(Empty) returns (WifiListResponse);
    rpc ScanWifi(Empty) returns (WifiListResponse);
}

message Empty {

}
message Network {
    optional string device = 1;
    optional string type = 2;
    string address = 3;
    string gateway = 4;
    optional string hwAddr = 5;
    optional string name = 6;
    optional string state = 7;
    string mask = 8;
    repeated string dns = 9;
    optional float signalLevel = 10;
    optional float quality = 11;
    optional string security = 12;
    optional bool dhcp = 13;
}

message GetNetworkResponse {
    repeated Network Ethernet = 1;
    Network Wifi = 2;
}

message GetEthernetResponse {
    repeated Network Ethernet = 1;
}

message GetDeviceRequest {
    string device = 1;
}

message SetNetworkRequest {
    string device = 1;
    string name = 2;
    bool dhcp = 3;
    optional string address = 4;
    optional string gateway = 5;
    optional string mask = 6;
    repeated string dns = 7;
}

message SetNetworkResponse {
    string device = 1;
    string name = 2;
    bool dhcp = 3;
    optional string address = 4;
    optional string gateway = 5;
    optional string mask = 6;
    repeated string dns = 7;
}

message ConnectWifiRequest {
    string ssid = 1;
    optional string password = 2;
}

message ConnectWifiResponse {
    string ssid = 1;
}

message WIFI {
    string ssid = 1;
    optional string bssid = 2;
    optional string mac = 3;
    int32 channel = 4;
    int32 frequency = 5;
    int32 signal_level = 6;
    float quality = 7;
    string security = 8;
    repeated string security_flags = 9;
    optional string mode = 10;
    string iface = 11;
}

message WifiListResponse {
    repeated WIFI list = 1;
}