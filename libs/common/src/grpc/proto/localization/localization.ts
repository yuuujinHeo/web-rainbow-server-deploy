// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.7.4
//   protoc               v3.12.4
// source: localization.proto

/* eslint-disable */
import { Metadata } from "@grpc/grpc-js";
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";

export const protobufPackage = "localization";

export interface InitRequest {
  command: string;
  x?: number | undefined;
  y?: number | undefined;
  z?: number | undefined;
  rz?: number | undefined;
  randomSeed?: string | undefined;
}

export interface InitResponse {
  command: string;
  x?: number | undefined;
  y?: number | undefined;
  z?: number | undefined;
  rz?: number | undefined;
  randomSeed?: string | undefined;
  result: string;
  message?: string | undefined;
}

export const LOCALIZATION_PACKAGE_NAME = "localization";

export interface LocalizationGrpcServiceClient {
  init(request: InitRequest, metadata?: Metadata): Observable<InitResponse>;

  autoInit(request: InitRequest, metadata?: Metadata): Observable<InitResponse>;

  randomInit(request: InitRequest, metadata?: Metadata): Observable<InitResponse>;

  semiAutoInit(request: InitRequest, metadata?: Metadata): Observable<InitResponse>;

  start(request: InitRequest, metadata?: Metadata): Observable<InitResponse>;

  stop(request: InitRequest, metadata?: Metadata): Observable<InitResponse>;
}

export interface LocalizationGrpcServiceController {
  init(request: InitRequest, metadata?: Metadata): Promise<InitResponse> | Observable<InitResponse> | InitResponse;

  autoInit(request: InitRequest, metadata?: Metadata): Promise<InitResponse> | Observable<InitResponse> | InitResponse;

  randomInit(
    request: InitRequest,
    metadata?: Metadata,
  ): Promise<InitResponse> | Observable<InitResponse> | InitResponse;

  semiAutoInit(
    request: InitRequest,
    metadata?: Metadata,
  ): Promise<InitResponse> | Observable<InitResponse> | InitResponse;

  start(request: InitRequest, metadata?: Metadata): Promise<InitResponse> | Observable<InitResponse> | InitResponse;

  stop(request: InitRequest, metadata?: Metadata): Promise<InitResponse> | Observable<InitResponse> | InitResponse;
}

export function LocalizationGrpcServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ["init", "autoInit", "randomInit", "semiAutoInit", "start", "stop"];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("LocalizationGrpcService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("LocalizationGrpcService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const LOCALIZATION_GRPC_SERVICE_NAME = "LocalizationGrpcService";
