// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.7.4
//   protoc               v3.12.4
// source: move.proto

/* eslint-disable */
import { Metadata } from "@grpc/grpc-js";
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";

export const protobufPackage = "move";

export interface Empty {
}

export interface MoveLog {
  id: string;
  command: string;
  status: string;
  mapName?: string | undefined;
  goalId?: string | undefined;
  goalName?: string | undefined;
  x?: number | undefined;
  y?: number | undefined;
  rz?: number | undefined;
  vx?: number | undefined;
  vy?: number | undefined;
  wz?: number | undefined;
  time?: string | undefined;
}

export interface MoveLogLastRequest {
  num: number;
  command?: string | undefined;
}

export interface MoveLogLastResponse {
  list: MoveLog[];
}

export interface MoveLogRequest {
  pageNo?: number | undefined;
  pageSize?: number | undefined;
  searchText?: string | undefined;
  searchType?: string | undefined;
  sortOption?: string | undefined;
  sortDirection?: string | undefined;
  dateFrom?: string | undefined;
  dateTo?: string | undefined;
}

export interface MoveLogResponse {
  list: MoveLog[];
  pageSize?: number | undefined;
  totalCount?: number | undefined;
  totalPage?: number | undefined;
}

export interface MoveCommandResquest {
  command: string;
  method?: string | undefined;
  preset?: number | undefined;
  goalId?: string | undefined;
  x?: number | undefined;
  y?: number | undefined;
  z?: number | undefined;
  rz?: number | undefined;
  vx?: number | undefined;
  vy?: number | undefined;
  wz?: number | undefined;
  direction?: string | undefined;
}

export interface MoveCommandResponse {
  command: string;
  method?: string | undefined;
  preset?: number | undefined;
  goalId?: string | undefined;
  x?: number | undefined;
  y?: number | undefined;
  z?: number | undefined;
  rz?: number | undefined;
  vx?: number | undefined;
  vy?: number | undefined;
  wz?: number | undefined;
  direction?: string | undefined;
}

export const MOVE_PACKAGE_NAME = "move";

export interface MoveGrpcServiceClient {
  /** Move */

  moveCommand(request: MoveCommandResquest, metadata?: Metadata): Observable<MoveCommandResponse>;

  moveGoal(request: MoveCommandResquest, metadata?: Metadata): Observable<MoveCommandResponse>;

  moveTarget(request: MoveCommandResquest, metadata?: Metadata): Observable<MoveCommandResponse>;

  moveJog(request: MoveCommandResquest, metadata?: Metadata): Observable<Empty>;

  movePause(request: Empty, metadata?: Metadata): Observable<Empty>;

  moveResume(request: Empty, metadata?: Metadata): Observable<Empty>;

  moveStop(request: Empty, metadata?: Metadata): Observable<Empty>;

  moveLastGoal(request: Empty, metadata?: Metadata): Observable<Empty>;

  /** MoveLog */

  moveLogLast(request: MoveLogLastRequest, metadata?: Metadata): Observable<MoveLogLastResponse>;

  moveLog(request: MoveLogRequest, metadata?: Metadata): Observable<MoveLogResponse>;
}

export interface MoveGrpcServiceController {
  /** Move */

  moveCommand(
    request: MoveCommandResquest,
    metadata?: Metadata,
  ): Promise<MoveCommandResponse> | Observable<MoveCommandResponse> | MoveCommandResponse;

  moveGoal(
    request: MoveCommandResquest,
    metadata?: Metadata,
  ): Promise<MoveCommandResponse> | Observable<MoveCommandResponse> | MoveCommandResponse;

  moveTarget(
    request: MoveCommandResquest,
    metadata?: Metadata,
  ): Promise<MoveCommandResponse> | Observable<MoveCommandResponse> | MoveCommandResponse;

  moveJog(request: MoveCommandResquest, metadata?: Metadata): Promise<Empty> | Observable<Empty> | Empty;

  movePause(request: Empty, metadata?: Metadata): Promise<Empty> | Observable<Empty> | Empty;

  moveResume(request: Empty, metadata?: Metadata): Promise<Empty> | Observable<Empty> | Empty;

  moveStop(request: Empty, metadata?: Metadata): Promise<Empty> | Observable<Empty> | Empty;

  moveLastGoal(request: Empty, metadata?: Metadata): Promise<Empty> | Observable<Empty> | Empty;

  /** MoveLog */

  moveLogLast(
    request: MoveLogLastRequest,
    metadata?: Metadata,
  ): Promise<MoveLogLastResponse> | Observable<MoveLogLastResponse> | MoveLogLastResponse;

  moveLog(
    request: MoveLogRequest,
    metadata?: Metadata,
  ): Promise<MoveLogResponse> | Observable<MoveLogResponse> | MoveLogResponse;
}

export function MoveGrpcServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = [
      "moveCommand",
      "moveGoal",
      "moveTarget",
      "moveJog",
      "movePause",
      "moveResume",
      "moveStop",
      "moveLastGoal",
      "moveLogLast",
      "moveLog",
    ];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("MoveGrpcService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("MoveGrpcService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const MOVE_GRPC_SERVICE_NAME = "MoveGrpcService";
