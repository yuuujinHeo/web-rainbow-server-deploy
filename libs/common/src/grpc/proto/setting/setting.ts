// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.7.4
//   protoc               v3.12.4
// source: setting.proto

/* eslint-disable */
import { Metadata } from "@grpc/grpc-js";
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";

export const protobufPackage = "setting";

export interface SettingRequest {
  type: string;
  data?: string | undefined;
}

export interface SettingResponse {
  type: string;
  data?: string | undefined;
}

export interface PresetListRequest {
  type: string;
}

export interface PresetListResponse {
  type: string;
  list: string[];
}

export interface PresetRequest {
  type: string;
  name: string;
  data?: string | undefined;
}

export interface PresetResponse {
  type: string;
  name: string;
  data?: string | undefined;
}

export const SETTING_PACKAGE_NAME = "setting";

export interface SettingGrpcServiceClient {
  getSetting(request: SettingRequest, metadata?: Metadata): Observable<SettingResponse>;

  saveSetting(request: SettingRequest, metadata?: Metadata): Observable<SettingResponse>;

  getPresetList(request: PresetListRequest, metadata?: Metadata): Observable<PresetListResponse>;

  createPreset(request: PresetRequest, metadata?: Metadata): Observable<PresetResponse>;

  deletePreset(request: PresetRequest, metadata?: Metadata): Observable<PresetResponse>;

  getPreset(request: PresetRequest, metadata?: Metadata): Observable<PresetResponse>;

  savePreset(request: PresetRequest, metadata?: Metadata): Observable<PresetResponse>;
}

export interface SettingGrpcServiceController {
  getSetting(
    request: SettingRequest,
    metadata?: Metadata,
  ): Promise<SettingResponse> | Observable<SettingResponse> | SettingResponse;

  saveSetting(
    request: SettingRequest,
    metadata?: Metadata,
  ): Promise<SettingResponse> | Observable<SettingResponse> | SettingResponse;

  getPresetList(
    request: PresetListRequest,
    metadata?: Metadata,
  ): Promise<PresetListResponse> | Observable<PresetListResponse> | PresetListResponse;

  createPreset(
    request: PresetRequest,
    metadata?: Metadata,
  ): Promise<PresetResponse> | Observable<PresetResponse> | PresetResponse;

  deletePreset(
    request: PresetRequest,
    metadata?: Metadata,
  ): Promise<PresetResponse> | Observable<PresetResponse> | PresetResponse;

  getPreset(
    request: PresetRequest,
    metadata?: Metadata,
  ): Promise<PresetResponse> | Observable<PresetResponse> | PresetResponse;

  savePreset(
    request: PresetRequest,
    metadata?: Metadata,
  ): Promise<PresetResponse> | Observable<PresetResponse> | PresetResponse;
}

export function SettingGrpcServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = [
      "getSetting",
      "saveSetting",
      "getPresetList",
      "createPreset",
      "deletePreset",
      "getPreset",
      "savePreset",
    ];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("SettingGrpcService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("SettingGrpcService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const SETTING_GRPC_SERVICE_NAME = "SettingGrpcService";
